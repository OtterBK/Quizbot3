{"version":3,"file":"WebmSeeker.js","sourceRoot":"","sources":["../../../play-dl/YouTube/classes/WebmSeeker.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebmElements, WebmHeader } from 'play-audio';\nimport { Duplex, DuplexOptions } from 'node:stream';\n\nenum DataType {\n    master,\n    string,\n    uint,\n    binary,\n    float\n}\n\nexport enum WebmSeekerState {\n    READING_HEAD = 'READING_HEAD',\n    READING_DATA = 'READING_DATA'\n}\n\ninterface WebmSeekerOptions extends DuplexOptions {\n    mode?: 'precise' | 'granular';\n}\n\nconst WEB_ELEMENT_KEYS = Object.keys(WebmElements);\n\nexport class WebmSeeker extends Duplex {\n    remaining?: Buffer;\n    state: WebmSeekerState;\n    chunk?: Buffer;\n    cursor: number;\n    header: WebmHeader;\n    headfound: boolean;\n    headerparsed: boolean;\n    seekfound: boolean;\n    private data_size: number;\n    private offset: number;\n    private data_length: number;\n    private sec: number;\n    private time: number;\n\n    constructor(sec: number, options: WebmSeekerOptions) {\n        super(options);\n        this.state = WebmSeekerState.READING_HEAD;\n        this.cursor = 0;\n        this.header = new WebmHeader();\n        this.headfound = false;\n        this.headerparsed = false;\n        this.seekfound = false;\n        this.data_length = 0;\n        this.data_size = 0;\n        this.offset = 0;\n        this.sec = sec;\n        this.time = Math.floor(sec / 10) * 10;\n    }\n\n    private get vint_length(): number {\n        let i = 0;\n        for (; i < 8; i++) {\n            if ((1 << (7 - i)) & this.chunk![this.cursor]) break;\n        }\n        return ++i;\n    }\n\n    private vint_value(): boolean {\n        if (!this.chunk) return false;\n        const length = this.vint_length;\n        if (this.chunk.length < this.cursor + length) return false;\n        let value = this.chunk[this.cursor] & ((1 << (8 - length)) - 1);\n        for (let i = this.cursor + 1; i < this.cursor + length; i++) value = (value << 8) + this.chunk[i];\n        this.data_size = length;\n        this.data_length = value;\n        return true;\n    }\n\n    cleanup() {\n        this.cursor = 0;\n        this.chunk = undefined;\n        this.remaining = undefined;\n    }\n\n    _read() {}\n\n    seek(content_length: number): Error | number {\n        let clusterlength = 0,\n            position = 0;\n        let time_left = (this.sec - this.time) * 1000 || 0;\n        time_left = Math.round(time_left / 20) * 20;\n        if (!this.header.segment.cues) return new Error('Failed to Parse Cues');\n\n        for (let i = 0; i < this.header.segment.cues.length; i++) {\n            const data = this.header.segment.cues[i];\n            if (Math.floor((data.time as number) / 1000) === this.time) {\n                position = data.position as number;\n                clusterlength = (this.header.segment.cues[i + 1]?.position || content_length) - position - 1;\n                break;\n            } else continue;\n        }\n        if (clusterlength === 0) return position;\n        return this.offset + Math.round(position + (time_left / 20) * (clusterlength / 500));\n    }\n\n    _write(chunk: Buffer, _: BufferEncoding, callback: (error?: Error | null) => void): void {\n        if (this.remaining) {\n            this.chunk = Buffer.concat([this.remaining, chunk]);\n            this.remaining = undefined;\n        } else this.chunk = chunk;\n\n        let err: Error | undefined;\n\n        if (this.state === WebmSeekerState.READING_HEAD) err = this.readHead();\n        else if (!this.seekfound) err = this.getClosestBlock();\n        else err = this.readTag();\n\n        if (err) callback(err);\n        else callback();\n    }\n\n    private readHead(): Error | undefined {\n        if (!this.chunk) return new Error('Chunk is missing');\n\n        while (this.chunk.length > this.cursor) {\n            const oldCursor = this.cursor;\n            const id = this.vint_length;\n            if (this.chunk.length < this.cursor + id) break;\n\n            const ebmlID = this.parseEbmlID(this.chunk.slice(this.cursor, this.cursor + id).toString('hex'));\n            this.cursor += id;\n\n            if (!this.vint_value()) {\n                this.cursor = oldCursor;\n                break;\n            }\n            if (!ebmlID) {\n                this.cursor += this.data_size + this.data_length;\n                continue;\n            }\n\n            if (!this.headfound) {\n                if (ebmlID.name === 'ebml') this.headfound = true;\n                else return new Error('Failed to find EBML ID at start of stream.');\n            }\n            const data = this.chunk.slice(\n                this.cursor + this.data_size,\n                this.cursor + this.data_size + this.data_length\n            );\n            const parse = this.header.parse(ebmlID, data);\n            if (parse instanceof Error) return parse;\n\n            // stop parsing the header once we have found the correct cue\n\n            if (ebmlID.name === 'seekHead') this.offset = oldCursor;\n\n            if (\n                ebmlID.name === 'cueClusterPosition' &&\n                this.header.segment.cues!.length > 2 &&\n                this.time === (this.header.segment.cues!.at(-2)!.time as number) / 1000\n            )\n                this.emit('headComplete');\n\n            if (ebmlID.type === DataType.master) {\n                this.cursor += this.data_size;\n                continue;\n            }\n\n            if (this.chunk.length < this.cursor + this.data_size + this.data_length) {\n                this.cursor = oldCursor;\n                break;\n            } else this.cursor += this.data_size + this.data_length;\n        }\n        this.remaining = this.chunk.slice(this.cursor);\n        this.cursor = 0;\n    }\n\n    private readTag(): Error | undefined {\n        if (!this.chunk) return new Error('Chunk is missing');\n\n        while (this.chunk.length > this.cursor) {\n            const oldCursor = this.cursor;\n            const id = this.vint_length;\n            if (this.chunk.length < this.cursor + id) break;\n\n            const ebmlID = this.parseEbmlID(this.chunk.slice(this.cursor, this.cursor + id).toString('hex'));\n            this.cursor += id;\n\n            if (!this.vint_value()) {\n                this.cursor = oldCursor;\n                break;\n            }\n            if (!ebmlID) {\n                this.cursor += this.data_size + this.data_length;\n                continue;\n            }\n\n            const data = this.chunk.slice(\n                this.cursor + this.data_size,\n                this.cursor + this.data_size + this.data_length\n            );\n            const parse = this.header.parse(ebmlID, data);\n            if (parse instanceof Error) return parse;\n\n            if (ebmlID.type === DataType.master) {\n                this.cursor += this.data_size;\n                continue;\n            }\n\n            if (this.chunk.length < this.cursor + this.data_size + this.data_length) {\n                this.cursor = oldCursor;\n                break;\n            } else this.cursor += this.data_size + this.data_length;\n\n            if (ebmlID.name === 'simpleBlock') {\n                const track = this.header.segment.tracks![this.header.audioTrack];\n                if (!track || track.trackType !== 2) return new Error('No audio Track in this webm file.');\n                if ((data[0] & 0xf) === track.trackNumber) this.push(data.slice(4));\n            }\n        }\n        this.remaining = this.chunk.slice(this.cursor);\n        this.cursor = 0;\n    }\n\n    private getClosestBlock(): Error | undefined {\n        if (this.sec === 0) {\n            this.seekfound = true;\n            return this.readTag();\n        }\n        if (!this.chunk) return new Error('Chunk is missing');\n        this.cursor = 0;\n        let positionFound = false;\n        while (!positionFound && this.cursor < this.chunk.length) {\n            this.cursor = this.chunk.indexOf('a3', this.cursor, 'hex');\n            if (this.cursor === -1) return new Error('Failed to find nearest Block.');\n            this.cursor++;\n            if (!this.vint_value()) return new Error('Failed to find correct simpleBlock in first chunk');\n            if (this.cursor + this.data_length + this.data_length > this.chunk.length) continue;\n            const data = this.chunk.slice(\n                this.cursor + this.data_size,\n                this.cursor + this.data_size + this.data_length\n            );\n            const track = this.header.segment.tracks![this.header.audioTrack];\n            if (!track || track.trackType !== 2) return new Error('No audio Track in this webm file.');\n            if ((data[0] & 0xf) === track.trackNumber) {\n                this.cursor += this.data_size + this.data_length;\n                this.push(data.slice(4));\n                positionFound = true;\n            } else continue;\n        }\n        if (!positionFound) return new Error('Failed to find nearest correct simple Block.');\n        this.seekfound = true;\n        return this.readTag();\n    }\n\n    private parseEbmlID(ebmlID: string) {\n        if (WEB_ELEMENT_KEYS.includes(ebmlID)) return WebmElements[ebmlID];\n        else return false;\n    }\n\n    _destroy(error: Error | null, callback: (error: Error | null) => void): void {\n        this.cleanup();\n        callback(error);\n    }\n\n    _final(callback: (error?: Error | null) => void): void {\n        this.cleanup();\n        callback();\n    }\n}\n"]}