{"version":3,"file":"search.js","sourceRoot":"","sources":["../../play-dl/YouTube/search.ts"],"names":[],"mappings":";;;AAAA,0CAAuC;AACvC,2CAAyE;AAKzE,IAAK,UAIJ;AAJD,WAAK,UAAU;IACX,wCAA0B,CAAA;IAC1B,2CAA6B,CAAA;IAC7B,0CAA4B,CAAA;AAChC,CAAC,EAJI,UAAU,KAAV,UAAU,QAId;AAMD;;;;;GAKG;AACI,KAAK,UAAU,SAAS,CAAC,MAAc,EAAE,UAAgC,EAAE;IAC9E,IAAI,GAAG,GAAG,+CAA+C,GAAG,MAAM,CAAC;IACnE,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC;IACzB,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5B,GAAG,IAAI,MAAM,CAAC;QACd,QAAQ,OAAO,CAAC,IAAI,EAAE;YAClB,KAAK,SAAS;gBACV,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC;gBAC1B,MAAM;YACV,KAAK,UAAU;gBACX,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC;gBAC3B,MAAM;YACV,KAAK,OAAO;gBACR,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC;gBACxB,MAAM;YACV;gBACI,MAAM,IAAI,KAAK,CAAC,wBAAwB,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;SAC/D;KACJ;IACD,MAAM,IAAI,GAAG,MAAM,IAAA,iBAAO,EAAC,GAAG,EAAE;QAC5B,OAAO,EAAE;YACL,iBAAiB,EAAE,OAAO,CAAC,QAAQ,IAAI,aAAa;SACvD;KACJ,CAAC,CAAC;IACH,IAAI,IAAI,CAAC,OAAO,CAAC,uEAAuE,CAAC,KAAK,CAAC,CAAC;QAC5F,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;IAC9E,OAAO,IAAA,0BAAiB,EAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC5C,CAAC;AA3BD,8BA2BC","sourcesContent":["import { request } from './../Request';\nimport { ParseSearchInterface, ParseSearchResult } from './utils/parser';\nimport { YouTubeVideo } from './classes/Video';\nimport { YouTubeChannel } from './classes/Channel';\nimport { YouTubePlayList } from './classes/Playlist';\n\nenum SearchType {\n    Video = 'EgIQAQ%253D%253D',\n    PlayList = 'EgIQAw%253D%253D',\n    Channel = 'EgIQAg%253D%253D'\n}\n\n/**\n * Type for YouTube returns\n */\nexport type YouTube = YouTubeVideo | YouTubeChannel | YouTubePlayList;\n/**\n * Command to search from YouTube\n * @param search The query to search\n * @param options limit & type of YouTube search you want.\n * @returns YouTube type.\n */\nexport async function yt_search(search: string, options: ParseSearchInterface = {}): Promise<YouTube[]> {\n    let url = 'https://www.youtube.com/results?search_query=' + search;\n    options.type ??= 'video';\n    if (url.indexOf('&sp=') === -1) {\n        url += '&sp=';\n        switch (options.type) {\n            case 'channel':\n                url += SearchType.Channel;\n                break;\n            case 'playlist':\n                url += SearchType.PlayList;\n                break;\n            case 'video':\n                url += SearchType.Video;\n                break;\n            default:\n                throw new Error(`Unknown search type: ${options.type}`);\n        }\n    }\n    const body = await request(url, {\n        headers: {\n            'accept-language': options.language || 'en-US;q=0.9'\n        }\n    });\n    if (body.indexOf('Our systems have detected unusual traffic from your computer network.') !== -1)\n        throw new Error('Captcha page: YouTube has detected that you are a bot!');\n    return ParseSearchResult(body, options);\n}\n"]}